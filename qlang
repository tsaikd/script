#!/bin/bash

PN="${BASH_SOURCE[0]##*/}"
PD="${BASH_SOURCE[0]%/*}"

source "${PD}/lib/die"

function usage() {
	cat <<EOF
Usage: ${PN} [Options] [PRO FILE]
Options:
  -h       : show this help message
EOF
	[ $# -gt 0 ] && { echo ; die "$@" ; } || exit 0
}

type getopt cat perl lupdate linguist lrelease >/dev/null || exit $?

opt="$(getopt -o h -- "$@")"
(($? != 0)) && usage
eval set -- "${opt}"
while true ; do
	case "${1}" in
	-h) usage ;;
	--) shift ; break ;;
	*) die "Internal error!" ;;
	esac
done

pro="${1}"
if [ -z "${pro}" ] ; then
	pro="$(ls -1 *.pro 2>/dev/null)"
	[ -z "${pro}" ] && die "No pro file found"
	[ "$(wc -l <<<"${pro}")" -ne 1 ] && die "Many pro file found"
fi

msg="$(lupdate "${pro}")"
echo "${msg}"

tsfile="$(perl -ane "s/^Updating '(.*?)'/print \"\\\"\$1\\\"\n\"/e" <<<"${msg}")"
for i in ${tsfile} ; do
	eval i="${i}"
	[ ! -f "${i}" ] && die "ts file no found ('${i}')"

	LC_ALL="zh_TW.utf8" linguist "${i}"
	lrelease "${i}"
done

