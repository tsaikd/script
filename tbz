#!/bin/bash

PN="$(basename "${0}")"

function usage() {
	cat <<EOF
Usage: ${PN} [Options] [Input path]
Options:
  -h       : show this help message
  -D <DIR> : set output dir

Default input path: "."
Default output dir: dirname of input path
EOF
	[ $# -gt 0 ] && { echo ; die "$@" ; } || exit 0
}

function die() {
	echo "$@" >&2
	exit 1
}

opt="$(getopt -o hD: -- "$@")"
(($? != 0)) && usage
eval set -- "${opt}"
while true ; do
	case "${1}" in
	-h) usage ;;
	-D) tdir="${2%/}" ; shift 2 ;;
	--) shift ; break ;;
	*) die "Internal error!" ;;
	esac
done

if [ "${1}" ] ; then
	src="${1}"
else
	src="."
fi

src="$(readlink -f "${src}")"
[ "${src}" == "/" ] && die "Input path cannot be '/'"

d="$(dirname "${src}")"
src="$(basename "${src}")"

if [ "${PN}" == "t7z" ] ; then
	tar="${src}.7z"
else
	tar="${src}.tbz"
fi

if [ "${tdir}" ] ; then
	tar="${tdir}/${tar}"
else
	tar="${d}/${tar}"
fi

pushd "${d}" &>/dev/null

if [ ! -e "${src}" ] ; then
	echo "'${src}' not found" >&2
	exit 1
fi

pwd
if [ "${PN}" == "t7z" ] ; then
	7z a -m0=lzma -mx=9 -mfb=273 -md=32m "${tar}" "${src}"
else
	tar cjvpf "${tar}" "${src}"
fi
echo
echo "output: ${tar}"

popd &>/dev/null

